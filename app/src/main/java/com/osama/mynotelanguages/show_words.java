package com.osama.mynotelanguages;import androidx.annotation.NonNull;import androidx.appcompat.app.AlertDialog;import androidx.appcompat.app.AppCompatActivity;import androidx.recyclerview.widget.ItemTouchHelper;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.content.Intent;import android.database.Cursor;import android.os.Bundle;import android.view.View;import android.view.Window;import android.view.WindowManager;import android.widget.Button;import android.widget.ImageView;import android.widget.Toast;import com.android.volley.AuthFailureError;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import com.google.android.material.floatingactionbutton.FloatingActionButton;import java.util.ArrayList;import java.util.HashMap;import java.util.Map;public class show_words extends AppCompatActivity {    RecyclerView recyclerView;    Customadapter customAdapter;    ArrayList<String> word , meaning , token , email;    String token_ ;    String email_;    @Override    protected void onCreate(Bundle savedInstanceState) {        requestWindowFeature(Window.FEATURE_NO_TITLE);        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,                WindowManager.LayoutParams.FLAG_FULLSCREEN);        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_show_words);        word = new ArrayList<>();        meaning = new ArrayList<>();        token = new ArrayList<>();        email = new ArrayList<>();        FloatingActionButton search = findViewById(R.id.search_en);        search.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(show_words.this, show_backup.class);                intent.putExtra("intent", "en");                startActivity(intent);            }        });        Sqlite sqlite = new Sqlite(show_words.this);        Cursor cursor = sqlite.redData();        User user = new User(show_words.this);        Cursor cursor_usr = user.redData();        if(cursor_usr.getCount() == 0){        }else {            while (cursor_usr.moveToNext()) {            //    token.add(cursor_usr.getString(4));            //    email.add(cursor_usr.getString(2));                token_ = cursor_usr.getString(4);                email_ = cursor_usr.getString(2);            }        }        if (cursor.getCount() == 0) {            AlertDialog.Builder builder = new AlertDialog.Builder(show_words.this);            builder.setIcon(R.drawable.ic_baseline_error_24)                    .setMessage("No Date");            AlertDialog dialog = builder.create();            dialog.show();        } else {            while (cursor.moveToNext()) {                word.add(cursor.getString(0));                meaning.add(cursor.getString(1));            }        }        recyclerView = findViewById(R.id.recyclerView_fr);        customAdapter = new Customadapter(show_words.this, word, meaning ,"en" , token_ , email_ );        recyclerView.setAdapter(customAdapter);        recyclerView.setLayoutManager(new LinearLayoutManager(show_words.this));    }    public void add_data_base(String string1 , String string2 , String type , String token , String email){        StringRequest request = new StringRequest(Request.Method.POST, "https://osamaelkassaby.com/apps/note/add/", new Response.Listener<String>() {            @Override            public void onResponse(String response) {                Toast.makeText(show_words.this , response.toString() , Toast.LENGTH_LONG).show();            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                AlertDialog.Builder builder = new AlertDialog.Builder(show_words.this);                builder.setTitle("Error")                        .setIcon(R.drawable.ic_baseline_error_24)                        .setMessage("Error In connection");                AlertDialog dialog = builder.create();                dialog.show();            }        }){            @Override            protected Map<String, String> getParams() throws AuthFailureError {                Map<String, String> data = new HashMap<>();                data.put("type", type);                data.put("token", token);                data.put("email", email);                data.put("meaning",string1);                data.put("word",string2 );                return data;            }        };        RequestQueue requestQueue = Volley.newRequestQueue(getApplicationContext());        requestQueue.add(request);    }    }