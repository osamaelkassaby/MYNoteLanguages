package com.osama.mynotelanguages;import androidx.appcompat.app.AlertDialog;import androidx.appcompat.app.AppCompatActivity;import android.content.Intent;import android.database.Cursor;import android.graphics.Color;import android.os.Bundle;import android.os.Handler;import android.view.LayoutInflater;import android.view.View;import android.view.Window;import android.view.WindowManager;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.android.volley.AuthFailureError;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import java.net.URL;import java.util.HashMap;import java.util.Map;public class MainActivity extends AppCompatActivity {    EditText word , meaning;    ImageView save;    String token_ ;    String email_ , name;    @Override    protected void onCreate(Bundle savedInstanceState) {        requestWindowFeature(Window.FEATURE_NO_TITLE);        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,                WindowManager.LayoutParams.FLAG_FULLSCREEN);        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        // ____________________________ NEW INTENT ___________________________________        User user = new User(MainActivity.this);        Cursor cursor_usr = user.redData();        if(cursor_usr.getCount() == 0){        }else {            while (cursor_usr.moveToNext()) {                //    token.add(cursor_usr.getString(4));                //    email.add(cursor_usr.getString(2));                token_ = cursor_usr.getString(4);                email_ = cursor_usr.getString(2);                name   = cursor_usr.getString(0);            }        }        TextView textView = new TextView(MainActivity.this);        textView = findViewById(R.id.name);        textView.setText("Welcome back  "+name);        save = findViewById(R.id.save_img);        save.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(MainActivity.this , show_data_api.class);                intent.putExtra("email" , email_ );                intent.putExtra("token" , token_);                startActivity(intent);            }        });        // ____________________________ NEW INTENT ___________________________________         View activity    = findViewById(R.id.mainactivity);         word    = findViewById(R.id.word);         meaning = findViewById(R.id.meaning);         Button add_English  = findViewById(R.id.add_English);         Button show = findViewById(R.id.show_words);         Button add_Fransh = findViewById(R.id.add_France);         Button show_word_fr = findViewById(R.id.show_words_fr);        StringRequest request = new StringRequest(Request.Method.POST, "https://osamaelkassaby.com/apps/note/update/", new Response.Listener<String>() {            @Override            public void onResponse(String response) {                if(response.equals("no")){                }else {                   AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);                   builder.setTitle(" Notification ")                           .setMessage(response.toString());                   AlertDialog dialog = builder.create();                   dialog.show();                }            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                Toast.makeText(MainActivity.this ,"Error" + error.toString(),Toast.LENGTH_LONG).show();            }        }){            @Override            protected Map<String, String> getParams() throws AuthFailureError {                Map<String, String> data = new HashMap<>();                data.put("token", "1");                data.put("name" , name);                data.put("email" , email_);                return data;            }        };        RequestQueue requestQueue = Volley.newRequestQueue(getApplicationContext());        requestQueue.add(request);         show_word_fr.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View v) {                 Handler handler = new Handler();                 LodingDailog lodingDailog = new LodingDailog(MainActivity.this);                 lodingDailog.StartLodingAlertDialog();                 handler.postDelayed(new Runnable() {                     @Override                     public void run() {                         lodingDailog.dismiss();                         Intent intent = new Intent(MainActivity.this , show_fr_words.class);                         startActivity(intent);                     }                 },1000);             }         });        show.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Handler handler = new Handler();                LodingDailog lodingDailog = new LodingDailog(MainActivity.this);                lodingDailog.StartLodingAlertDialog();                handler.postDelayed(new Runnable() {                    @Override                    public void run() {                        lodingDailog.dismiss();                        Intent intent = new Intent(MainActivity.this , show_words.class);                        startActivity(intent);                    }                },1000);            }        });        add_English.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                LodingDailog lodingDailog = new LodingDailog(MainActivity.this);                lodingDailog.StartLodingAlertDialog();                Handler handler = new Handler();                handler.postDelayed(new Runnable() {                    @Override                    public void run() {                        lodingDailog.dismiss();                        String word_add = word.getText().toString();                        String meaning_add = meaning.getText().toString();                        Sqlite sqlite = new Sqlite(MainActivity.this);                        BackUp_en backUp_en = new BackUp_en(MainActivity.this);                         if(word_add.equals("background:black")){                            activity.setBackgroundColor(Color.BLACK);                         }else if(word_add.equals("theame:1")){                             activity.setBackground(getDrawable(R.drawable.background));                         }else if(word_add.equals("theame:2")){                             activity.setBackground(getDrawable(R.drawable.background2));                         }                         else {                             if(word_add.equals("") || meaning_add.equals("")){                                 AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);                                 builder.setTitle("Error")                                         .setIcon(R.drawable.ic_baseline_error_24)                                         .setMessage("Form Can't be empty");                                 AlertDialog dialog = builder.create();                                 dialog.show();                             }else {                                 sqlite.addWord(word_add,meaning_add);                                 backUp_en.addWords(meaning_add ,word_add);                                 word.setText("");                                 meaning.setText("");                             }                         }                    }                },1000);            }        });        add_Fransh.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                LodingDailog lodingDailog = new LodingDailog(MainActivity.this);                lodingDailog.StartLodingAlertDialog();                Handler handler = new Handler();                handler.postDelayed(new Runnable() {                    @Override                    public void run() {                        lodingDailog.dismiss();                        String word_add = word.getText().toString();                        String meaning_add = meaning.getText().toString();                        SqliteFr sqliteFr = new SqliteFr(MainActivity.this);                        BackUp_fr backUp_fr = new BackUp_fr(MainActivity.this);                        if(word_add.equals("") || meaning_add.equals("")){                            AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);                            builder.setTitle("Error")                                    .setIcon(R.drawable.ic_baseline_error_24)                                    .setMessage("Form Can't be empty");                            AlertDialog dialog = builder.create();                            dialog.show();                        }else {                            sqliteFr.addWord(word_add,meaning_add);                            backUp_fr.addWords(meaning_add,word_add);                            word.setText("");                            meaning.setText("");                        }                    }                },1000);            }        });    }    public void add_data_base(String string1 , String string2 , String type){        StringRequest request = new StringRequest(Request.Method.POST, "https://osamaelkassaby.com/apps/note/add/", new Response.Listener<String>() {            @Override            public void onResponse(String response) {            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);                builder.setTitle("Error")                        .setIcon(R.drawable.ic_baseline_error_24)                        .setMessage("Error In connection");                AlertDialog dialog = builder.create();                dialog.show();            }        }){            @Override            protected Map<String, String> getParams() throws AuthFailureError {                Map<String, String> data = new HashMap<>();                data.put("type", type);                data.put("meaning",string1);                data.put("word",string2 );                return data;            }        };    }}