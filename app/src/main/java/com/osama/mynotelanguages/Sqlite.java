package com.osama.mynotelanguages;import android.app.AlertDialog;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;import android.widget.Toast;import androidx.annotation.Nullable;public class Sqlite extends SQLiteOpenHelper {    private final Context context;    private static final String DATABASE_MAME = "note.db";    private static final int DATABASE_VERSION = 1;    public static final String TABEL_NAME = "words";    public static final String COLUMN_WORD = "word";    public static final String COLUMN_MEANINGS = "meanings";    public Sqlite(@Nullable Context context) {        super(context , DATABASE_MAME , null , DATABASE_VERSION);        this.context = context;    }    @Override    public void onCreate(SQLiteDatabase db) {        String query = " CREATE TABLE " +  TABEL_NAME +                " (" + COLUMN_WORD + " TEXT ,"+                COLUMN_MEANINGS + " TEXT ) ;";        db.execSQL(query);    }    @Override    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {        db.execSQL("DROP TABLE IF EXISTS " + TABEL_NAME);        onCreate(db);    }    public void addWord(String word , String meaning ){        SQLiteDatabase db = this.getWritableDatabase();        ContentValues cv = new ContentValues();        cv.put(COLUMN_WORD, word);        cv.put(COLUMN_MEANINGS, meaning);        long result = db.insert(TABEL_NAME , null , cv);        if(result == -1){            AlertDialog.Builder builder = new AlertDialog.Builder(context);            builder.setIcon(R.drawable.ic_baseline_error_24)                    .setTitle(" ")                    .setMessage("failed database");            AlertDialog alertDialog = builder.create();            alertDialog.show();        }else {            AlertDialog.Builder builder = new AlertDialog.Builder(context);            builder.setIcon(R.drawable.sucsess)                    .setView(R.layout.sucsess);            AlertDialog alertDialog = builder.create();            alertDialog.show();        }    }    Cursor redData(){        String query = "SELECT * FROM " +TABEL_NAME;        SQLiteDatabase db = this.getReadableDatabase();        Cursor cursor = null;        if(db != null){            cursor = db.rawQuery(query,null);        }        return cursor;    }    void delete(String word) {        SQLiteDatabase db = this.getWritableDatabase();        long result = db.delete(TABEL_NAME, "word=?", new String[]{word});        if (result == -1) {            AlertDialog.Builder builder = new AlertDialog.Builder(context);            builder.setIcon(R.drawable.ic_baseline_error_24)                    .setTitle(" ")                    .setMessage("failed database");            AlertDialog alertDialog = builder.create();            alertDialog.show();        } else {            AlertDialog.Builder builder = new AlertDialog.Builder(context);            builder.setIcon(R.drawable.sucsess)                    .setView(R.layout.sucsess);            AlertDialog alertDialog = builder.create();            alertDialog.show();        }    }}